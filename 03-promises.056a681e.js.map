{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAsCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,IAC3BC,YAAW,IACFN,EACHI,EAAQ,C,SAAEN,E,MAAUC,IACpBM,EAAO,C,SAAEP,E,MAAUC,KACtBA,IAEP,CA5CeQ,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBACF,MAAMZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,GAAWH,EAAEI,OAAOC,SACnCC,EAAM,CACVjB,OAAQA,EAAMkB,MACdL,MAAOA,EAAKK,MACZJ,QAASA,EAAOI,OAElB,GAQF,UAA4BlB,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,IACzC,OAAOd,EAAQ,GAAKa,EAAO,GAAKC,EAAS,CAC3C,CAVMK,CAAmBF,GAErB,YADAG,EAAAxB,GAASyB,OAAOC,QAAQ,8BAW5B,UAA2BtB,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,IACxC,IAAK,IAAIS,EAAQ,EAAGA,EAAQT,EAAQS,IAClCzB,EAAcyB,EAAQ,EAAGvB,EAAQa,EAAOU,GACrCC,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxB,GAASyB,OAAOI,QAAQ,qBAAqB1B,QAAeC,MAAS,IAEtE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxB,GAASyB,OAAOC,QAAQ,oBAAoBvB,QAAeC,MAAS,GAG5E,CAlBE2B,CAAkBV,EACpB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst elForm = document.querySelector('.form');\nelForm.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.target.elements;\n  const obj = {\n    delay: +delay.value,\n    step: +step.value,\n    amount: +amount.value,\n  };\n  if (isCheckNoValidData(obj)) {\n    Notiflix.Notify.failure('Please enter correct data');\n    return;\n  }\n  generatorPromises(obj);\n}\n\n// @return true if not valid @params\nfunction isCheckNoValidData({ delay, step, amount }) {\n  return delay < 0 || step < 0 || amount < 1 ? true : false;\n}\n\nfunction generatorPromises({ delay, step, amount }) {\n  for (let index = 0; index < amount; index++) {\n    createPromise(index + 1, delay + step * index)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) =>\n    setTimeout(() => {\n      return shouldResolve\n        ? resolve({ position, delay })\n        : reject({ position, delay });\n    }, delay)\n  );\n}\n\n// Why doesn't work it???\n\n// function generatorPromises({ delay, step, amount }) {\n//   startTime = Date.now();\n//   let lastPromise = createPromise(delay, 1)\n//     .then(({ position, delay }) => {\n//       console.log(\n//         `Fulfilled promise ${position} in ${delay}ms, time from start ${\n//           (Date.now() - startTime) / 1e3\n//         }`\n//       );\n//     })\n//     .catch(({ position, delay }) => {\n//       console.log(\n//         `Fulfilled promise ${position} in ${delay}ms time from start ${\n//           (Date.now() - startTime) / 1e3\n//         }`\n//       );\n//     });\n//   for (let index = 2; index <= amount; index++) {\n//     lastPromise = lastPromise.then(\n//       createPromise(index, step)\n//         .then(({ position, delay }) => {\n//           console.log(\n//             `Fulfilled promise ${position} in ${delay}ms, time from start ${\n//               (Date.now() - startTime) / 1e3\n//             }`\n//           );\n//         })\n//         .catch(({ position, delay }) => {\n//           console.log(\n//             `Fulfilled promise ${position} in ${delay}ms time from start ${\n//               (Date.now() - startTime) / 1e3\n//             }`\n//           );\n//         })\n//     );\n//   }\n// }\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   return new Promise((resolve, reject) => {\n//     if (shouldResolve) resolve(setTimeout(() => ({ position, delay }), delay));\n//     else reject(setTimeout(() => ({ position, delay }), delay));\n//   });\n// }\n"],"names":["$19McP","parcelRequire","$75aa520dfb7f3d3e$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","step","amount","target","elements","obj","value","$75aa520dfb7f3d3e$var$isCheckNoValidData","$parcel$interopDefault","Notify","failure","index","then","success","catch","$75aa520dfb7f3d3e$var$generatorPromises"],"version":3,"file":"03-promises.056a681e.js.map"}